// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OBRS.Models;

#nullable disable

namespace OBRS.Migrations
{
    [DbContext(typeof(obrsContext))]
    [Migration("20250908102353_InitAuth")]
    partial class InitAuth
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OBRS.Models.Booking", b =>
                {
                    b.Property<Guid>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Bus_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PassengerCNIC")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("PassengerName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PassengerPhone")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<int>("SeatNumber")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("TravelDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookingId");

                    b.HasIndex("Bus_id");

                    b.ToTable("tbl_bookings");
                });

            modelBuilder.Entity("OBRS.Models.Buses", b =>
                {
                    b.Property<Guid>("BusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("AvailableSeats")
                        .HasColumnType("int");

                    b.Property<string>("BusImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BusNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BusType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("PricePerSeat")
                        .HasColumnType("decimal(10,2)");

                    b.Property<Guid>("Route_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TotalSeats")
                        .HasColumnType("int");

                    b.HasKey("BusId");

                    b.HasIndex("Route_id");

                    b.ToTable("tbl_bus");
                });

            modelBuilder.Entity("OBRS.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("tbl_contact");
                });

            modelBuilder.Entity("OBRS.Models.Employee", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("Bus_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CNIC")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("EmployeeImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LicenseNumber")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("Bus_id");

                    b.ToTable("tbl_employees");
                });

            modelBuilder.Entity("OBRS.Models.Prices", b =>
                {
                    b.Property<Guid>("PriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AdditionalCharges")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("BaseFare")
                        .HasColumnType("decimal(10,2)");

                    b.Property<Guid>("Bus_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("FinalFare")
                        .HasColumnType("decimal(10,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("PriceId");

                    b.HasIndex("Bus_id")
                        .IsUnique();

                    b.ToTable("tbl_price");
                });

            modelBuilder.Entity("OBRS.Models.Routes", b =>
                {
                    b.Property<Guid>("RouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("DistanceInKm")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("EstimatedDuration")
                        .HasColumnType("time");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RouteName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("StartLocation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("RouteId");

                    b.ToTable("tbl_route");
                });

            modelBuilder.Entity("OBRS.Models.Booking", b =>
                {
                    b.HasOne("OBRS.Models.Buses", "bus")
                        .WithMany()
                        .HasForeignKey("Bus_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("bus");
                });

            modelBuilder.Entity("OBRS.Models.Buses", b =>
                {
                    b.HasOne("OBRS.Models.Routes", "routes")
                        .WithMany()
                        .HasForeignKey("Route_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("routes");
                });

            modelBuilder.Entity("OBRS.Models.Employee", b =>
                {
                    b.HasOne("OBRS.Models.Buses", "bus")
                        .WithMany()
                        .HasForeignKey("Bus_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("bus");
                });

            modelBuilder.Entity("OBRS.Models.Prices", b =>
                {
                    b.HasOne("OBRS.Models.Buses", "bus")
                        .WithOne("price")
                        .HasForeignKey("OBRS.Models.Prices", "Bus_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("bus");
                });

            modelBuilder.Entity("OBRS.Models.Buses", b =>
                {
                    b.Navigation("price")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
